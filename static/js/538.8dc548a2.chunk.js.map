{"version":3,"file":"static/js/538.8dc548a2.chunk.js","mappings":"qKAEA,MA6CA,EA7CgBA,KAEZC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+HACHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAAD,SACG,4DAGLC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAAD,SACG,8LAWLC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAAD,SACG,4P","sources":["components/React/Context/Context.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Context = () => {\r\n  return (\r\n    <div>\r\n      <h1>React Context</h1>\r\n      <p>Context provides a way to pass data through the component tree without having to pass props down manually at every level.</p>\r\n      <h2>Creating a Context</h2>\r\n      <pre>\r\n        <code>\r\n          {`const MyContext = React.createContext(defaultValue);`}\r\n        </code>\r\n      </pre>\r\n      <h2>Providing a Context</h2>\r\n      <pre>\r\n        <code>\r\n          {`class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <MyContext.Provider value={/* some value */}>\r\n        <Toolbar />\r\n      </MyContext.Provider>\r\n    );\r\n  }\r\n}`}\r\n        </code>\r\n      </pre>\r\n      <h2>Consuming a Context</h2>\r\n      <pre>\r\n        <code>\r\n          {`class Toolbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyContext.Consumer>\r\n          {value => /* render something based on the context value */}\r\n        </MyContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}`}\r\n        </code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Context;"],"names":["Context","_jsxs","children","_jsx"],"sourceRoot":""}