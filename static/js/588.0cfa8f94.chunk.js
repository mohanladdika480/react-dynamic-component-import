"use strict";(self.webpackChunkfrontend_concepts=self.webpackChunkfrontend_concepts||[]).push([[409,552,588],{1552:(i,e,n)=>{n.r(e),n.d(e,{default:()=>u});var t=n(5043),a=n(1572),o=n(1154),s=n(2347),r=n(710),c=n(2101),l=n(8293),d=n(579);const u=i=>{let{items:e}=i;const[n,u]=t.useState([]),g=i=>()=>{n.includes(i)?u(n.filter((e=>e!==i))):u([...n,i])};return(0,d.jsx)("div",{children:null===e||void 0===e?void 0:e.map(((i,e)=>{var t;return(0,d.jsxs)(a.A,{"aria-controls":`panel1-content-${e}`,id:`panel1-header-${e}`,sx:{backgroundColor:"#000000db","&.Mui-expanded":{my:"0px"}},expanded:null===n||void 0===n?void 0:n.includes(e),children:[(0,d.jsx)(o.A,{onClick:g(e),sx:{"&.MuiButtonBase-root":{minHeight:"0px","& .MuiAccordionSummary-content.Mui-expanded":{my:"6px"},"& .MuiAccordionSummary-content":{my:"6px"}},color:"#007097"},children:(0,d.jsxs)(s.A,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center",width:"100%"},children:[(0,d.jsx)("p",{children:(0,d.jsxs)("b",{children:[e+1,". ",i.name]})}),null!==n&&void 0!==n&&n.includes(e)?(0,d.jsx)(c.A,{}):(0,d.jsx)(l.A,{})]})}),(0,d.jsx)(r.A,{sx:{pt:"0px",color:"#9a9d9f"},children:(0,d.jsx)("ul",{children:null===i||void 0===i||null===(t=i.items)||void 0===t?void 0:t.map(((n,t)=>(0,d.jsx)("li",{dangerouslySetInnerHTML:{__html:n},className:"mb_4"},`${null===i||void 0===i?void 0:i.name}-${e}-${t}`)))})})]},i.name)}))})}},8588:(i,e,n)=>{n.r(e),n.d(e,{default:()=>l});var t=n(5043),a=n(1409),o=n(1552),s=n(579);const{reactTopicsList:r}=a,c=[{name:"React",topics:r}],l=()=>(0,s.jsx)(s.Fragment,{children:c.map((i=>(0,s.jsxs)(t.Fragment,{children:[(0,s.jsx)("h2",{children:i.name}),(0,s.jsx)(o.default,{items:i.topics})]},i.name)))})},1409:i=>{i.exports=JSON.parse('{"reactTopicsList":[{"name":"Core React Concepts","items":["<i>JSX (JavaScript XML) </i>\u2013 Writing HTML in JavaScript","<i>Components </i>\u2013 Functional & Class Components","<i>Props </i>\u2013 Passing data from parent to child","<i>Prop Drilling </i>\u2013 Avoiding unnecessary prop passing","<i>State & setState (useState) </i>\u2013 Managing component state","<i>Event Handling in React </i>\u2013 Handling user interactions","<i>Conditional Rendering </i>\u2013 Using if, &&, ternary operators","<i>Lists & Keys </i>\u2013 Efficiently rendering lists with unique keys","<i>Reconciliation & Virtual DOM </i>\u2013 How React updates UI efficiently","<i>Higher-Order Components (HOC) </i>\u2013 Reusing component logic (withAuth, etc.)","<i>Render Props Pattern </i>\u2013 Alternative to HOCs for code sharing","<i>Portals </i>\u2013 Rendering components outside the main DOM tree"]},{"name":"React Component Lifecycle","items":["<i>Mounting, Updating, and Unmounting Phases </i>\u2013 Lifecycle stages of a component","<i>Lifecycle Methods (Class Components) </i>\u2013 componentDidMount, componentDidUpdate, componentWillUnmount","<i>getDerivedStateFromProps </i>\u2013 Updating state based on prop changes (rare but useful)","<i>shouldComponentUpdate </i>\u2013 Performance optimization in class components","<i>useEffect Hook </i>\u2013 Managing side effects in functional components"]},{"name":"React Hooks (Functional Component Features)","items":["<i>useState() </i>\u2013 Managing local component state","<i>useEffect() </i>\u2013 Handling side effects (API calls, event listeners, etc.)","<i>useContext() </i>\u2013 Managing global state without prop drilling","<i>useRef() </i>\u2013 Accessing DOM elements and persisting values without re-rendering","<i>useMemo() </i>\u2013 Performance optimization for expensive calculations","<i>useCallback() </i>\u2013 Memoizing functions to prevent unnecessary re-renders","<i>useReducer() </i>\u2013 Alternative to useState for complex state logic","<i>useLayoutEffect() </i>\u2013 Running effects before browser paint","<i>useLayoutEffect vs. useEffect </i>\u2013 Difference in execution timing","<i>Custom Hooks </i>\u2013 Creating reusable logic","<i>useTransition() </i>\u2013 Deferring updates for smooth UI rendering","<i>useDeferredValue() </i>\u2013 Optimizing expensive computations","<i>useId() </i>\u2013 Generating unique IDs for accessibility","<i>useImperativeHandle </i>\u2013 Customizing ref behavior"]},{"name":"React Component Communication","items":["<i>Parent to Child </i>\u2013 Using Props","<i>Child to Parent </i>\u2013 Using Callback Functions","<i>Sibling Communication </i>\u2013 Lifting State Up","<i>Global State Management </i>\u2013 Context API, Redux, Recoil, Zustand"]},{"name":"State Management in React","items":["<i>Local State </i>\u2013 Managed with useState","<i>Global State </i>\u2013 useContext, Redux, Zustand, Recoil","<i>Context API </i>\u2013 Lightweight global state management","<i>Redux </i>\u2013 Centralized state management","<i>Actions, Reducers, Store, Dispatch </i>\u2013 Core Redux concepts","<i>useDispatch() & useSelector() </i>\u2013 Accessing Redux state and actions","<i>Redux Toolkit (RTK) </i>\u2013 Simplified Redux with slices and async logic","<i>Middleware (Thunk, Saga) </i>\u2013 Handling async actions in Redux","<i>Recoil, Zustand, Jotai </i>\u2013 Alternative state management libraries","<i>Efficient State Updates </i>\u2013 Using functional updates (setState(prev => newState))"]},{"name":"React Router (Client-Side Routing)","items":["<i>react-router-dom </i>\u2013 Navigation in React","<i>React Router v6+ </i>\u2013 Latest features and improvements","<i>BrowserRouter vs. HashRouter vs. MemoryRouter </i>\u2013 Choosing the right router","<i>Route & Switch (deprecated) </i>\u2013 Routing in React","<i>Link, NavLink </i>\u2013 Navigation components","<i>useNavigate(), useParams(), useLocation() </i>\u2013 Programmatic navigation","<i>Dynamic Routing & Route Parameters </i>\u2013 Creating flexible routes","<i>Nested Routes </i>\u2013 Structuring routes hierarchically","<i>Protected Routes </i>\u2013 Authentication-based navigation","<i>Lazy Loading Routes </i>\u2013 Optimizing performance with React.lazy()","<i>Scroll Restoration </i>\u2013 Maintaining scroll position across navigation (useLocation)"]},{"name":"Forms & Validation","items":["<i>Controlled vs. Uncontrolled Components </i>\u2013 Handling form data","<i>Handling Input Fields </i>\u2013 onChange, value, useState","<i>React Hook Form </i>\u2013 Efficient form management (modern)","<i>Formik & Yup </i>\u2013 Validation and form handling","<i>Handling File Uploads </i>\u2013 Managing file input","<i>Multi-step Forms </i>\u2013 Managing complex form workflows"]},{"name":"Performance Optimization","items":["<i>React.memo() </i>\u2013 Prevent unnecessary renders","<i>useMemo() & useCallback() </i>\u2013 Optimizing calculations and functions","<i>Lazy Loading & Code Splitting </i>\u2013 React.lazy(), Suspense","<i>Virtualization </i>\u2013 Rendering large lists efficiently (react-window, react-virtualized)","<i>Debouncing & Throttling </i>\u2013 Optimizing event handling (lodash.debounce())","<i>Avoiding unnecessary re-renders </i>\u2013 Using useRef, useEffect dependencies","<i>Concurrent Rendering </i>\u2013 Optimizing UI responsiveness","<i>React Profiler </i>\u2013 Measuring component performance"]},{"name":"React and API Handling","items":["<i>Fetching Data </i>\u2013 Using fetch & Axios","<i>Pagination & Infinite Scroll </i>\u2013 Optimizing API calls (React Query, useInfiniteQuery)","<i>WebSockets </i>\u2013 Real-time data handling (Socket.io)","<i>Polling & Debouncing </i>\u2013 Efficient API request patterns","<i>GraphQL with React </i>\u2013 Fetching optimized data (Apollo Client, Relay)","<i>Suspense for Data Fetching </i>\u2013 Avoiding excessive loading states"]},{"name":"Error Handling & Debugging","items":["<i>Error Boundaries </i>\u2013 Catching component errors","<i>Try/Catch & Logging Errors </i>\u2013 Handling runtime issues","<i>React Developer Tools </i>\u2013 Debugging React applications","<i>Testing Components </i>\u2013 Using Jest & React Testing Library"]},{"name":"Authentication & Authorization","items":["<i>JWT (JSON Web Token) Authentication </i>\u2013 Secure user sessions","<i>OAuth </i>\u2013 Google, Facebook login integration","<i>Role-based Access Control (RBAC) </i>\u2013 Managing permissions","<i>Protected Routes </i>\u2013 Restricting access based on authentication","<i>Storing Tokens Securely </i>\u2013 Using LocalStorage & HttpOnly Cookies"]},{"name":"UI Libraries & Styling","items":["<i>CSS Modules </i>\u2013 Scoped styles","<i>Styled Components </i>\u2013 CSS-in-JS approach","<i>Tailwind CSS </i>\u2013 Utility-first CSS framework","<i>Material-UI (MUI) </i>\u2013 Popular UI component library","<i>Chakra UI </i>\u2013 Accessible component library","<i>Ant Design (AntD) </i>\u2013 Enterprise-level UI framework","<i>Theme Customization </i>\u2013 Global styling and theming","<i>Framer Motion </i>\u2013 Modern animation library for React"]},{"name":"React Testing","items":["<i>Unit Testing </i>\u2013 Testing individual components (Jest)","<i>Integration Testing </i>\u2013 Ensuring multiple components work together","<i>End-to-End (E2E) Testing </i>\u2013 Using Cypress & Playwright","<i>Mocking API Calls </i>\u2013 Using MSW or Jest mocks","<i>Snapshot Testing </i>\u2013 Checking UI consistency (react-test-renderer)"]},{"name":"React and TypeScript","items":["<i>Type Checking Props & State </i>","<i>Interfaces vs. Types </i>","<i>Generics in React Components </i>","<i>Context API with TypeScript </i>","<i>Utility Types in TypeScript </i>"]},{"name":"Server-Side Rendering (SSR) & Static Site Generation (SSG)","items":["<i>Next.js </i>\u2013 React framework for SSR/SSG","<i>Incremental Static Regeneration (ISR) </i>\u2013 Improving page loading speed","<i>API Routes </i>\u2013 Backend functionality in Next.js","<i>SEO Optimization with Next.js </i>\u2013 Improving search rankings"]},{"name":"Web Performance & Optimization","items":["<i>Lighthouse Auditing </i>\u2013 Evaluating website performance","<i>First Contentful Paint (FCP) Optimization </i>\u2013 Faster page loads","<i>Lazy Loading Images & Components </i>\u2013 Reducing initial load time","<i>Minifying JavaScript & CSS </i>\u2013 Reducing bundle size"]},{"name":"React Build & Deployment","items":["<i>Webpack & Babel </i>\u2013 Bundling and transpiling React apps","<i>Vite </i>\u2013 Faster build tool for React","<i>Environment Variables </i>\u2013 Managing .env files","<i>Hosting & Deployment </i>\u2013 Deploying to Vercel, Netlify, Firebase, AWS"]},{"name":"Accessibility (a11y)","items":["<i>ARIA Attributes </i>\u2013 Improving usability for screen readers","<i>Keyboard Navigation </i>\u2013 Handling tab and enter interactions","<i>Semantic HTML </i>\u2013 Using proper elements for better accessibility"]},{"name":"Micro Frontends (Advanced)","items":["<i>Concept of Micro Frontends </i>\u2013 Breaking monolithic UI into smaller apps","<i>Module Federation in Webpack </i>\u2013 Sharing React components across apps","<i>Integrating Multiple React Apps </i>\u2013 Scalable frontend architecture"]}]}')}}]);
//# sourceMappingURL=588.0cfa8f94.chunk.js.map